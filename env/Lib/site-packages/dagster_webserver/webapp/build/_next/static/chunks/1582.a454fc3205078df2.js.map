{"version":3,"file":"static/chunks/1582.a454fc3205078df2.js","mappings":"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","sources":["webpack://_N_E/../../node_modules/lodash/memoize.js","webpack://_N_E/../../node_modules/@swc/helpers/esm/_define_property.js","webpack://_N_E/../../node_modules/@swc/helpers/esm/_object_spread.js","webpack://_N_E/../../node_modules/@swc/helpers/esm/_object_spread_props.js","webpack://_N_E/../../node_modules/@swc/helpers/esm/_array_with_holes.js","webpack://_N_E/../../node_modules/@swc/helpers/esm/_iterable_to_array_limit.js","webpack://_N_E/../../node_modules/@swc/helpers/esm/_non_iterable_rest.js","webpack://_N_E/../../node_modules/@swc/helpers/esm/_array_like_to_array.js","webpack://_N_E/../../node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js","webpack://_N_E/../../node_modules/@swc/helpers/esm/_sliced_to_array.js","webpack://_N_E/../../node_modules/@swc/helpers/esm/_array_without_holes.js","webpack://_N_E/../../node_modules/@swc/helpers/esm/_iterable_to_array.js","webpack://_N_E/../../node_modules/@swc/helpers/esm/_non_iterable_spread.js","webpack://_N_E/../../node_modules/@swc/helpers/esm/_to_consumable_array.js","webpack://_N_E/../../node_modules/@vx/shape/esm/shapes/link/diagonal/LinkVertical.js","webpack://_N_E/../ui-core/src/hooks/useStateWithStorage.tsx","webpack://_N_E/../ui-core/src/app/Flags.tsx","webpack://_N_E/../ui-core/src/app/Util.tsx","webpack://_N_E/../ui-core/src/asset-graph/Utils.tsx","webpack://_N_E/../ui-core/src/asset-graph/layout.ts","webpack://_N_E/../ui-core/src/app/titleOfIO.ts","webpack://_N_E/../ui-core/src/graph/layout.ts","webpack://_N_E/../ui-core/src/workers/dagre_layout.worker.ts","webpack://_N_E/<anon>"],"sourcesContent":["var MapCache = require('./_MapCache');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = MapCache;\n\nmodule.exports = memoize;\n","export function _define_property(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });\n    } else obj[key] = value;\n\n    return obj;\n}\nexport { _define_property as _ };\n","import { _define_property } from \"./_define_property.js\";\n\nexport function _object_spread(target) {\n    for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i] != null ? arguments[i] : {};\n        var ownKeys = Object.keys(source);\n\n        if (typeof Object.getOwnPropertySymbols === \"function\") {\n            ownKeys = ownKeys.concat(\n                Object.getOwnPropertySymbols(source).filter(function(sym) {\n                    return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n                })\n            );\n        }\n\n        ownKeys.forEach(function(key) {\n            _define_property(target, key, source[key]);\n        });\n    }\n\n    return target;\n}\nexport { _object_spread as _ };\n","function ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n\n    if (Object.getOwnPropertySymbols) {\n        var symbols = Object.getOwnPropertySymbols(object);\n        if (enumerableOnly) {\n            symbols = symbols.filter(function(sym) {\n                return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n            });\n        }\n        keys.push.apply(keys, symbols);\n    }\n\n    return keys;\n}\nexport function _object_spread_props(target, source) {\n    source = source != null ? source : {};\n\n    if (Object.getOwnPropertyDescriptors) Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    else {\n        ownKeys(Object(source)).forEach(function(key) {\n            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n    }\n\n    return target;\n}\nexport { _object_spread_props as _ };\n","export function _array_with_holes(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nexport { _array_with_holes as _ };\n","export function _iterable_to_array_limit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n    if (_i == null) return;\n\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n\n    try {\n        for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally {\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally {\n            if (_d) throw _e;\n        }\n    }\n\n    return _arr;\n}\nexport { _iterable_to_array_limit as _ };\n","export function _non_iterable_rest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_rest as _ };\n","export function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","import { _array_like_to_array } from \"./_array_like_to_array.js\";\n\nexport function _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n","import { _array_with_holes } from \"./_array_with_holes.js\";\nimport { _iterable_to_array_limit } from \"./_iterable_to_array_limit.js\";\nimport { _non_iterable_rest } from \"./_non_iterable_rest.js\";\nimport { _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nexport function _sliced_to_array(arr, i) {\n    return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();\n}\nexport { _sliced_to_array as _ };\n","import { _array_like_to_array } from \"./_array_like_to_array.js\";\n\nexport function _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","export function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","export function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n","import { _array_without_holes } from \"./_array_without_holes.js\";\nimport { _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nexport function _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport { linkVertical } from 'd3-shape';\nexport function pathVerticalDiagonal(_ref) {\n  var source = _ref.source,\n      target = _ref.target,\n      x = _ref.x,\n      y = _ref.y;\n  return function (data) {\n    var link = linkVertical();\n    link.x(x);\n    link.y(y);\n    link.source(source);\n    link.target(target);\n    return link(data);\n  };\n}\nLinkVertical.propTypes = {\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  x: PropTypes.func,\n  y: PropTypes.func,\n  source: PropTypes.func,\n  target: PropTypes.func,\n  path: PropTypes.func,\n  className: PropTypes.string,\n  children: PropTypes.func,\n  data: PropTypes.any\n};\nexport default function LinkVertical(_ref2) {\n  var className = _ref2.className,\n      innerRef = _ref2.innerRef,\n      data = _ref2.data,\n      path = _ref2.path,\n      _ref2$x = _ref2.x,\n      x = _ref2$x === void 0 ? function (d) {\n    return d.x;\n  } : _ref2$x,\n      _ref2$y = _ref2.y,\n      y = _ref2$y === void 0 ? function (d) {\n    return d.y;\n  } : _ref2$y,\n      _ref2$source = _ref2.source,\n      source = _ref2$source === void 0 ? function (d) {\n    return d.source;\n  } : _ref2$source,\n      _ref2$target = _ref2.target,\n      target = _ref2$target === void 0 ? function (d) {\n    return d.target;\n  } : _ref2$target,\n      children = _ref2.children,\n      restProps = _objectWithoutPropertiesLoose(_ref2, [\"className\", \"innerRef\", \"data\", \"path\", \"x\", \"y\", \"source\", \"target\", \"children\"]);\n\n  var pathGen = path || pathVerticalDiagonal({\n    source: source,\n    target: target,\n    x: x,\n    y: y\n  });\n  if (children) return children({\n    path: path\n  });\n  return React.createElement(\"path\", _extends({\n    ref: innerRef,\n    className: cx('vx-link vx-link-vertical-diagonal', className),\n    d: pathGen(data)\n  }, restProps));\n}","import * as React from 'react';\n\nexport function getJSONForKey(key: string) {\n  let stored = undefined;\n  try {\n    stored = window.localStorage.getItem(key);\n    if (stored) {\n      return JSON.parse(stored);\n    }\n  } catch (err) {\n    if (typeof stored === 'string') {\n      // With useStateWithStorage, some values like timezone are moving from `UTC` to `\"UTC\"`\n      // in LocalStorage. To read the old values, pass through raw string values. We can\n      // remove this a few months after 0.14.1 is released.\n      return stored;\n    }\n    return undefined;\n  }\n}\n\nconst DID_WRITE_LOCALSTORAGE = '';\n\nexport function useStateWithStorage<T>(key: string, validate: (json: any) => T) {\n  const [version, setVersion] = React.useState(0);\n\n  const validateRef = React.useRef(validate);\n  validateRef.current = validate;\n\n  const listener = React.useCallback(\n    (event: Event) => {\n      if (event instanceof CustomEvent && event.detail === key) {\n        setVersion((v) => v + 1);\n      }\n    },\n    [key],\n  );\n\n  React.useEffect(() => {\n    document.addEventListener(DID_WRITE_LOCALSTORAGE, listener);\n    return () => document.removeEventListener(DID_WRITE_LOCALSTORAGE, listener);\n  }, [listener]);\n\n  // Note: This hook doesn't keep the loaded data in state -- instead it uses a version bit and\n  // a ref to load the value from localStorage when the `key` changes or when the `version` changes.\n  // This allows us to immediately return the saved value for `key` in the same render.\n\n  const state = React.useMemo(() => {\n    return validate(getJSONForKey(key));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [validate, key, version]);\n\n  const setState = React.useCallback(\n    (input: React.SetStateAction<T>) => {\n      const next =\n        input instanceof Function ? input(validateRef.current(getJSONForKey(key))) : input;\n      if (next === undefined) {\n        window.localStorage.removeItem(key);\n      } else {\n        window.localStorage.setItem(key, JSON.stringify(next));\n      }\n      document.removeEventListener(DID_WRITE_LOCALSTORAGE, listener);\n      document.dispatchEvent(new CustomEvent(DID_WRITE_LOCALSTORAGE, {detail: key}));\n      document.addEventListener(DID_WRITE_LOCALSTORAGE, listener);\n\n      setVersion((v) => v + 1);\n\n      return next;\n    },\n    [key, listener],\n  );\n\n  const value = React.useMemo(() => [state, setState], [state, setState]);\n  return value as [T, React.Dispatch<React.SetStateAction<T | undefined>>];\n}\n","import memoize from 'lodash/memoize';\nimport {useMemo} from 'react';\n\nimport {getJSONForKey} from '../hooks/useStateWithStorage';\n\nexport const DAGSTER_FLAGS_KEY = 'DAGSTER_FLAGS';\n\n// Use const because we need to extend this in cloud. https://blog.logrocket.com/extend-enums-typescript/\nexport const FeatureFlag = {\n  flagDebugConsoleLogging: 'flagDebugConsoleLogging' as const,\n  flagDisableWebsockets: 'flagDisableWebsockets' as const,\n  flagSidebarResources: 'flagSidebarResources' as const,\n  flagDisableAutoLoadDefaults: 'flagDisableAutoLoadDefaults' as const,\n  flagUseNewOverviewPage: 'flagUseNewOverviewPage' as const,\n  flagSettingsPage: 'flagSettingsPage' as const,\n};\nexport type FeatureFlagType = keyof typeof FeatureFlag;\n\nexport const getFeatureFlags: () => FeatureFlagType[] = memoize(\n  () =>\n    getJSONForKey(DAGSTER_FLAGS_KEY) || [\n      // Enable the new asset details page by default.\n      FeatureFlag.flagUseNewOverviewPage,\n    ],\n);\n\nexport const featureEnabled = memoize((flag: FeatureFlagType) => getFeatureFlags().includes(flag));\n\ntype FlagMap = {\n  readonly [F in FeatureFlagType]: boolean;\n};\n\nexport const useFeatureFlags = () => {\n  return useMemo(() => {\n    const flagSet = new Set(getFeatureFlags());\n    const all: Record<string, boolean> = {};\n    for (const flag in FeatureFlag) {\n      all[flag] = flagSet.has(flag as FeatureFlagType);\n    }\n    return all as FlagMap;\n  }, []);\n};\n\nexport const setFeatureFlags = (flags: FeatureFlagType[]) => {\n  if (!(flags instanceof Array)) {\n    throw new Error('flags must be an array');\n  }\n  localStorage.setItem(DAGSTER_FLAGS_KEY, JSON.stringify(flags));\n};\n","import {cache} from 'idb-lru-cache';\nimport memoize from 'lodash/memoize';\nimport LRU from 'lru-cache';\n\nimport {FeatureFlag, featureEnabled} from './Flags';\nimport {timeByParts} from './timeByParts';\n\nfunction twoDigit(v: number) {\n  return `${v < 10 ? '0' : ''}${v}`;\n}\n\nfunction indexesOf(string: string, search: RegExp | string) {\n  const indexes: number[] = [];\n  const regexp = new RegExp(search, 'g');\n  let match = null;\n  while ((match = regexp.exec(string))) {\n    indexes.push(match.index);\n  }\n  return indexes;\n}\n\nexport const withMiddleTruncation = (text: string, options: {maxLength: number}) => {\n  const overflowLength = text.length - options.maxLength;\n  if (overflowLength <= 0) {\n    // No truncation is necessary\n    return text;\n  }\n  if (options.maxLength <= 10) {\n    // Middle truncation to this few characters (eg: abc…ef) is kind of silly\n    // and just using abcde… looks better.\n    return text.substring(0, options.maxLength - 1) + '…';\n  }\n\n  // Find all the breakpoints in the string\n  //   \"my_great_long_solid_name\"\n  //     ˄     ˄    ˄     ˄\n  const breakpoints = text.includes('__') ? indexesOf(text, /__/g) : indexesOf(text, /[_>\\.-]/g);\n\n  // Given no breakpoints, slice out the middle of the string. Adding\n  // the overflowLength here gives us the END point of the truncated region.\n  //\n  //   \"abc(defg)hijk\"\n  //            ˄\n  let breakpoint = Math.floor((text.length + overflowLength) / 2);\n\n  // Find the first breakpoint that exists AFTER enough characters that we could show\n  // at least three prefix letters after cutting out overflowLength.\n  const firstUsableIdx = breakpoints.findIndex((bp) => bp > overflowLength + 3);\n\n  if (firstUsableIdx !== -1) {\n    // If we found a usable breakpoint, see if we could instead choose the middle\n    // breakpoint which would give us more prefix. All else equal,\n    // \"my_great_l…_name\" looks better than \"my_g…_solid_name\"\n    const middleIdx = Math.floor(breakpoints.length / 2);\n    const breakpointAtIndex = breakpoints[Math.max(firstUsableIdx, middleIdx)];\n    if (breakpointAtIndex !== undefined) {\n      breakpoint = breakpointAtIndex;\n    }\n  }\n\n  const result = [\n    text.substring(0, breakpoint - (overflowLength + 1)),\n    text.substring(breakpoint),\n  ].join('…');\n\n  return result;\n};\n\nconst msecFormatter = memoize((locale: string) => {\n  return new Intl.NumberFormat(locale, {\n    minimumFractionDigits: 3,\n    maximumFractionDigits: 3,\n  });\n});\n\n/**\n * Return an i18n-formatted millisecond in seconds as a decimal, with no leading zero.\n */\nconst formatMsecMantissa = (msec: number) =>\n  msecFormatter(navigator.language)\n    .format(msec / 1000)\n    .slice(-4);\n\n/**\n * Format the time without milliseconds, rounding to :01 for non-zero value within (-1, 1)\n */\nexport const formatElapsedTimeWithoutMsec = (msec: number) => {\n  const {hours, minutes, seconds} = timeByParts(msec);\n  const negative = msec < 0;\n  const roundedSeconds = msec !== 0 && msec < 1000 && msec > -1000 ? 1 : seconds;\n  return `${negative ? '-' : ''}${hours}:${twoDigit(minutes)}:${twoDigit(roundedSeconds)}`;\n};\n\nexport const formatElapsedTimeWithMsec = (msec: number) => {\n  const {hours, minutes, seconds, milliseconds} = timeByParts(msec);\n\n  const negative = msec < 0;\n  const sign = negative ? '-' : '';\n  const hourStr = hours > 0 ? `${hours}:` : '';\n  const minuteStr = hours > 0 ? `${twoDigit(minutes)}:` : minutes > 0 ? `${minutes}:` : '';\n  const secStr = hours > 0 || minutes > 0 ? `${twoDigit(seconds)}` : `${seconds}`;\n  const mantissa = formatMsecMantissa(milliseconds);\n\n  return `${sign}${hourStr}${minuteStr}${secStr}${mantissa}`;\n};\n\nexport function breakOnUnderscores(str: string) {\n  return str.replace(/_/g, '_\\u200b');\n}\n\nexport function patchCopyToRemoveZeroWidthUnderscores() {\n  document.addEventListener('copy', (event) => {\n    if (!event.clipboardData) {\n      // afaik this is always defined, but the TS field is optional\n      return;\n    }\n\n    // Note: This returns the text of the current selection if DOM\n    // nodes are selected. If the selection on the page is text within\n    // codemirror or an input or textarea, this returns \"\" and we fall\n    // through to the default pasteboard content.\n    const text = (window.getSelection() || '').toString().replace(/_\\u200b/g, '_');\n\n    if (text.length) {\n      event.preventDefault();\n      event.clipboardData.setData('Text', text);\n    }\n  });\n}\n\nexport function asyncMemoize<T, R, U extends (arg: T, ...rest: any[]) => PromiseLike<R>>(\n  fn: U,\n  hashFn?: (arg: T, ...rest: any[]) => any,\n  hashSize?: number,\n): U {\n  const cache = new LRU(hashSize || 50);\n  return (async (arg: T, ...rest: any[]) => {\n    const key = hashFn ? hashFn(arg, ...rest) : arg;\n    if (cache.has(key)) {\n      return Promise.resolve(cache.get(key) as R);\n    }\n    const r = (await fn(arg, ...rest)) as R;\n    cache.set(key, r);\n    return r;\n  }) as any;\n}\n\nexport function indexedDBAsyncMemoize<T, R, U extends (arg: T, ...rest: any[]) => Promise<R>>(\n  fn: U,\n  hashFn?: (arg: T, ...rest: any[]) => any,\n): U & {\n  isCached: (arg: T, ...rest: any[]) => Promise<boolean>;\n} {\n  const lru = cache<string, R>({\n    dbName: 'indexDBAsyncMemoizeDB',\n    maxCount: 50,\n  });\n\n  async function genHashKey(arg: T, ...rest: any[]) {\n    const hash = hashFn ? hashFn(arg, ...rest) : arg;\n\n    const encoder = new TextEncoder();\n    // Crypto.subtle isn't defined in insecure contexts... fallback to using the full string as a key\n    // https://stackoverflow.com/questions/46468104/how-to-use-subtlecrypto-in-chrome-window-crypto-subtle-is-undefined\n    if (crypto.subtle?.digest) {\n      const data = encoder.encode(hash.toString());\n      const hashBuffer = await crypto.subtle.digest('SHA-1', data);\n      const hashArray = Array.from(new Uint8Array(hashBuffer)); // convert buffer to byte array\n      return hashArray.map((b) => b.toString(16).padStart(2, '0')).join(''); // convert bytes to hex string\n    }\n    return hash.toString();\n  }\n\n  const ret = (async (arg: T, ...rest: any[]) => {\n    return new Promise<R>(async (resolve) => {\n      const hashKey = await genHashKey(arg, ...rest);\n      if (await lru.has(hashKey)) {\n        const {value} = await lru.get(hashKey);\n        resolve(value);\n        return;\n      }\n\n      const result = await fn(arg, ...rest);\n      // Resolve the promise before storing the result in IndexedDB\n      resolve(result);\n      await lru.set(hashKey, result, {\n        // Some day in the year 2050...\n        expiry: new Date(9 ** 13),\n      });\n    });\n  }) as any;\n  ret.isCached = async (arg: T, ...rest: any) => {\n    const hashKey = await genHashKey(arg, ...rest);\n    return await lru.has(hashKey);\n  };\n  return ret;\n}\n\n// Simple memoization function for methods that take a single object argument.\n// Returns a memoized copy of the provided function which retrieves the result\n// from a cache after the first invocation with a given object.\n//\n// Uses WeakMap to tie the lifecycle of the cache to the lifecycle of the\n// object argument.\n//\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function weakmapMemoize<T extends object, R>(\n  fn: (arg: T, ...rest: any[]) => R,\n): (arg: T, ...rest: any[]) => R {\n  const cache = new WeakMap();\n  return (arg: T, ...rest: any[]) => {\n    if (cache.has(arg)) {\n      return cache.get(arg);\n    }\n    const r = fn(arg, ...rest);\n    cache.set(arg, r);\n    return r;\n  };\n}\n\nexport function assertUnreachable(value: never): never {\n  throw new Error(`Didn't expect to get here with value: ${JSON.stringify(value)}`);\n}\n\nexport function debugLog(...args: any[]) {\n  if (featureEnabled(FeatureFlag.flagDebugConsoleLogging)) {\n    console.log(...args);\n  }\n}\n\nexport function colorHash(str: string) {\n  let seed = 0;\n  for (let i = 0; i < str.length; i++) {\n    seed = ((seed << 5) - seed + str.charCodeAt(i)) | 0;\n  }\n\n  const random255 = (x: number) => {\n    const value = Math.sin(x) * 10000;\n    return 255 * (value - Math.floor(value));\n  };\n\n  return `rgb(${random255(seed++)}, ${random255(seed++)}, ${random255(seed++)})`;\n}\n\n// Useful for generating predicates to retain type information when\n// find/filtering GraphQL results. Example:\n//\n// const textMetadata = metadataEntries.filter(gqlTypePredicate('TextMetadataEntry'));\n//\n// `textMetadata` will be of type `TextMetadataEntry[]`.\nexport const gqlTypePredicate =\n  <T extends string>(typename: T) =>\n  <N extends {__typename: string}>(node: N): node is Extract<N, {__typename: T}> => {\n    return node.__typename === typename;\n  };\n\nexport const COMMON_COLLATOR = new Intl.Collator(navigator.language, {sensitivity: 'base'});\n","import {pathHorizontalDiagonal, pathVerticalDiagonal} from '@vx/shape';\nimport memoize from 'lodash/memoize';\n\nimport {AssetNodeKeyFragment} from './types/AssetNode.types';\nimport {AssetNodeForGraphQueryFragment} from './types/useAssetGraphData.types';\nimport {COMMON_COLLATOR} from '../app/Util';\nimport {\n  AssetCheckLiveFragment,\n  AssetGraphLiveQuery,\n  AssetLatestInfoFragment,\n  AssetLatestInfoRunFragment,\n  AssetNodeLiveFragment,\n  AssetNodeLiveFreshnessInfoFragment,\n  AssetNodeLiveMaterializationFragment,\n  AssetNodeLiveObservationFragment,\n} from '../asset-data/types/AssetBaseDataProvider.types';\nimport {AssetStaleDataFragment} from '../asset-data/types/AssetStaleStatusDataProvider.types';\nimport {RunStatus} from '../graphql/types';\n\n/**\n * IMPORTANT: This file is used by the WebWorker so make sure we don't indirectly import React or anything that relies on window/document\n */\n\n/**\n * IMPORTANT: This file is used by the WebWorker so make sure we don't indirectly import React or anything that relies on window/document\n */\n\ntype AssetNode = AssetNodeForGraphQueryFragment;\ntype AssetKey = AssetNodeKeyFragment;\ntype AssetLiveNode = AssetNodeLiveFragment;\ntype AssetLatestInfo = AssetLatestInfoFragment;\n\nexport const __ASSET_JOB_PREFIX = '__ASSET_JOB';\n\nexport function isHiddenAssetGroupJob(jobName: string) {\n  return jobName.startsWith(__ASSET_JOB_PREFIX);\n}\n\n// IMPORTANT: We use this, rather than AssetNode.id throughout this file because\n// the GraphQL interface exposes dependencyKeys, not dependencyIds. We also need\n// ways to \"build\" GraphId's locally, they can't always be server-provided.\n//\n// This value is NOT the same as AssetNode.id values provided by the server,\n// because JSON.stringify's whitespace behavior is different than Python's.\n//\nexport type GraphId = string;\nexport const toGraphId = (key: {path: string[]}): GraphId => JSON.stringify(key.path);\nexport const fromGraphId = (graphId: GraphId): AssetNodeKeyFragment => ({\n  path: JSON.parse(graphId),\n  __typename: 'AssetKey',\n});\n\nexport interface GraphNode {\n  id: GraphId;\n  assetKey: AssetKey;\n  definition: AssetNode;\n}\n\nexport interface GraphData {\n  nodes: {[assetId: GraphId]: GraphNode};\n  downstream: {[assetId: GraphId]: {[childAssetId: GraphId]: boolean}};\n  upstream: {[assetId: GraphId]: {[parentAssetId: GraphId]: boolean}};\n  expandedGroups?: string[];\n}\n\nexport const buildGraphData = (assetNodes: AssetNode[]) => {\n  const data: GraphData = {\n    nodes: {},\n    downstream: {},\n    upstream: {},\n  };\n\n  const addEdge = (upstreamGraphId: string, downstreamGraphId: string) => {\n    if (upstreamGraphId === downstreamGraphId) {\n      // Skip add edges for self-dependencies (eg: assets relying on older partitions of themselves)\n      return;\n    }\n    data.downstream[upstreamGraphId] = {\n      ...(data.downstream[upstreamGraphId] || {}),\n      [downstreamGraphId]: true,\n    };\n    data.upstream[downstreamGraphId] = {\n      ...(data.upstream[downstreamGraphId] || {}),\n      [upstreamGraphId]: true,\n    };\n  };\n\n  assetNodes.forEach((definition: AssetNode) => {\n    const id = toGraphId(definition.assetKey);\n    definition.dependencyKeys.forEach((key) => {\n      addEdge(toGraphId(key), id);\n    });\n    definition.dependedByKeys.forEach((key) => {\n      addEdge(id, toGraphId(key));\n    });\n\n    data.nodes[id] = {\n      id,\n      assetKey: definition.assetKey,\n      definition,\n    };\n  });\n\n  return data;\n};\n\nexport const nodeDependsOnSelf = (node: GraphNode) => {\n  const id = toGraphId(node.assetKey);\n  return node.definition.dependedByKeys.some((d) => toGraphId(d) === id);\n};\n\nexport const graphHasCycles = (graphData: GraphData) => {\n  const nodes = new Set(Object.keys(graphData.nodes));\n  const search = (stack: string[], node: string): boolean => {\n    if (stack.indexOf(node) !== -1) {\n      return true;\n    }\n    if (nodes.delete(node) === true) {\n      const nextStack = stack.concat(node);\n      return Object.keys(graphData.downstream[node] || {}).some((nextNode) =>\n        search(nextStack, nextNode),\n      );\n    }\n    return false;\n  };\n  let hasCycles = false;\n  while (nodes.size !== 0 && !hasCycles) {\n    hasCycles = search([], nodes.values().next().value);\n  }\n  return hasCycles;\n};\n\nexport const buildSVGPathHorizontal = pathHorizontalDiagonal({\n  source: (s: any) => s.source,\n  target: (s: any) => s.target,\n  x: (s: any) => s.x,\n  y: (s: any) => s.y,\n});\nexport const buildSVGPathVertical = pathVerticalDiagonal({\n  source: (s: any) => s.source,\n  target: (s: any) => s.target,\n  x: (s: any) => s.x,\n  y: (s: any) => s.y,\n});\n\nexport interface LiveDataForNode {\n  stepKey: string;\n  unstartedRunIds: string[]; // run in progress and step not started\n  inProgressRunIds: string[]; // run in progress and step in progress\n  runWhichFailedToMaterialize: AssetLatestInfoRunFragment | null;\n  lastMaterialization: AssetNodeLiveMaterializationFragment | null;\n  lastMaterializationRunStatus: RunStatus | null; // only available if runWhichFailedToMaterialize is null\n  freshnessInfo: AssetNodeLiveFreshnessInfoFragment | null;\n  lastObservation: AssetNodeLiveObservationFragment | null;\n  assetChecks: AssetCheckLiveFragment[];\n  partitionStats: {\n    numMaterialized: number;\n    numMaterializing: number;\n    numPartitions: number;\n    numFailed: number;\n  } | null;\n  opNames: string[];\n}\n\nexport type LiveDataForNodeWithStaleData = LiveDataForNode & {\n  staleStatus: AssetStaleDataFragment['staleStatus'];\n  staleCauses: AssetStaleDataFragment['staleCauses'];\n};\n\nexport const MISSING_LIVE_DATA: LiveDataForNodeWithStaleData = {\n  unstartedRunIds: [],\n  inProgressRunIds: [],\n  runWhichFailedToMaterialize: null,\n  freshnessInfo: null,\n  lastMaterialization: null,\n  lastMaterializationRunStatus: null,\n  lastObservation: null,\n  partitionStats: null,\n  staleStatus: null,\n  staleCauses: [],\n  assetChecks: [],\n  opNames: [],\n  stepKey: '',\n};\n\nexport interface LiveData {\n  [assetId: GraphId]: LiveDataForNode;\n}\n\nexport const buildLiveData = ({\n  assetNodes,\n  assetsLatestInfo,\n}: Pick<AssetGraphLiveQuery, 'assetNodes' | 'assetsLatestInfo'>) => {\n  const data: LiveData = {};\n\n  for (const liveNode of assetNodes) {\n    const graphId = toGraphId(liveNode.assetKey);\n    const assetLatestInfo = assetsLatestInfo.find(\n      (r) => JSON.stringify(r.assetKey) === JSON.stringify(liveNode.assetKey),\n    );\n\n    data[graphId] = buildLiveDataForNode(liveNode, assetLatestInfo);\n  }\n\n  return data;\n};\n\nexport const buildLiveDataForNode = (\n  assetNode: AssetLiveNode,\n  assetLatestInfo?: AssetLatestInfo,\n): LiveDataForNode => {\n  const lastMaterialization = assetNode.assetMaterializations[0] || null;\n  const lastObservation = assetNode.assetObservations[0] || null;\n  const latestRunForAsset = assetLatestInfo?.latestRun ? assetLatestInfo.latestRun : null;\n\n  const runWhichFailedToMaterialize =\n    (latestRunForAsset?.status === 'FAILURE' &&\n      (!lastMaterialization || lastMaterialization.runId !== latestRunForAsset?.id) &&\n      latestRunForAsset) ||\n    null;\n\n  return {\n    lastMaterialization,\n    lastMaterializationRunStatus:\n      latestRunForAsset && lastMaterialization?.runId === latestRunForAsset?.id\n        ? latestRunForAsset.status\n        : null,\n    lastObservation,\n    assetChecks:\n      assetNode.assetChecksOrError.__typename === 'AssetChecks'\n        ? assetNode.assetChecksOrError.checks\n        : [],\n    stepKey: stepKeyForAsset(assetNode),\n    freshnessInfo: assetNode.freshnessInfo,\n    inProgressRunIds: assetLatestInfo?.inProgressRunIds || [],\n    unstartedRunIds: assetLatestInfo?.unstartedRunIds || [],\n    partitionStats: assetNode.partitionStats || null,\n    runWhichFailedToMaterialize,\n    opNames: assetNode.opNames,\n  };\n};\n\nexport function tokenForAssetKey(key: {path: string[]}) {\n  return key.path.join('/');\n}\n\nexport function tokenToAssetKey(token: string) {\n  return {path: token.split('/')};\n}\n\nexport function displayNameForAssetKey(key: {path: string[]}) {\n  return key.path.join(' / ');\n}\n\nexport function sortAssetKeys(a: {path: string[]}, b: {path: string[]}) {\n  return COMMON_COLLATOR.compare(displayNameForAssetKey(a), displayNameForAssetKey(b));\n}\n\nexport function stepKeyForAsset(definition: {opNames: string[]}) {\n  // Used for linking to the run with this step highlighted. We only support highlighting\n  // a single step, so just use the first one.\n  const firstOp = definition.opNames.length ? definition.opNames[0] : null;\n  return firstOp || '';\n}\n\nexport const itemWithAssetKey = (key: {path: string[]}) => {\n  const token = tokenForAssetKey(key);\n  return (asset: {assetKey: {path: string[]}}) => tokenForAssetKey(asset.assetKey) === token;\n};\n\nexport const isGroupId = (str: string) => /^[^@:]+@[^@:]+:.+$/.test(str);\n\nexport const groupIdForNode = (node: GraphNode) =>\n  [\n    node.definition.repository.name,\n    '@',\n    node.definition.repository.location.name,\n    ':',\n    node.definition.groupName,\n  ].join('');\n\n// Inclusive\nexport const getUpstreamNodes = memoize(\n  (assetKey: AssetNodeKeyFragment, graphData: GraphData): AssetNodeKeyFragment[] => {\n    const upstream = Object.keys(graphData.upstream[toGraphId(assetKey)] || {});\n    const currentUpstream = upstream.map((graphId) => fromGraphId(graphId));\n    return [\n      assetKey,\n      ...currentUpstream,\n      ...currentUpstream.map((graphId) => getUpstreamNodes(graphId, graphData)).flat(),\n    ].filter(\n      (key, index, arr) =>\n        // Filter out non uniques\n        arr.findIndex((key2) => JSON.stringify(key2) === JSON.stringify(key)) === index,\n    );\n  },\n  (key, data) => JSON.stringify({key, data}),\n);\n","import * as dagre from 'dagre';\n\nimport {GraphData, GraphId, GraphNode, groupIdForNode, isGroupId} from './Utils';\nimport {IBounds, IPoint} from '../graph/common';\nimport {ChangeReason} from '../graphql/types';\n\nexport type AssetLayoutDirection = 'vertical' | 'horizontal';\n\nexport interface AssetLayout {\n  id: GraphId;\n  bounds: IBounds; // Overall frame of the box relative to 0,0 on the graph\n}\n\nexport interface GroupLayout {\n  id: GraphId;\n  groupName: string;\n  repositoryName: string;\n  repositoryLocationName: string;\n  bounds: IBounds; // Overall frame of the box relative to 0,0 on the graph\n  expanded: boolean;\n}\nexport type AssetLayoutEdge = {\n  from: IPoint;\n  fromId: string;\n  to: IPoint;\n  toId: string;\n};\n\nexport type AssetGraphLayout = {\n  width: number;\n  height: number;\n  edges: AssetLayoutEdge[];\n  nodes: {[id: string]: AssetLayout};\n  groups: {[name: string]: GroupLayout};\n};\nconst MARGIN = 100;\n\nexport type LayoutAssetGraphConfig = dagre.GraphLabel & {\n  direction: AssetLayoutDirection;\n  /** Pass `auto` to use getAssetNodeDimensions, or a value to give nodes a fixed height */\n  nodeHeight: number | 'auto';\n  /** Our asset groups have \"title bars\" - use these numbers to adjust the bounding boxes.\n   * Note that these adjustments are applied post-dagre layout. For padding > nodesep, you\n   * may need to set \"clusterpaddingtop\", \"clusterpaddingbottom\" so Dagre lays out the boxes\n   * with more spacing.\n   */\n  groupPaddingTop: number;\n  groupPaddingBottom: number;\n  groupRendering: 'if-varied' | 'always';\n\n  /** Supported in Dagre, just not documented. Additional spacing between group nodes */\n  clusterpaddingtop?: number;\n  clusterpaddingbottom?: number;\n  ranker?: 'tight-tree' | 'longest-path' | 'network-simplex';\n};\n\nexport type LayoutAssetGraphOptions = {\n  direction: AssetLayoutDirection;\n  overrides?: Partial<LayoutAssetGraphConfig>;\n};\n\nexport const Config = {\n  horizontal: {\n    ranker: 'tight-tree',\n    direction: 'horizontal',\n    marginx: MARGIN,\n    marginy: MARGIN,\n    ranksep: 60,\n    rankdir: 'LR',\n    edgesep: 90,\n    nodesep: -10,\n    nodeHeight: 'auto',\n    groupPaddingTop: 65,\n    groupPaddingBottom: -15,\n    groupRendering: 'if-varied',\n    clusterpaddingtop: 100,\n  },\n  vertical: {\n    ranker: 'tight-tree',\n    direction: 'horizontal',\n    marginx: MARGIN,\n    marginy: MARGIN,\n    ranksep: 20,\n    rankdir: 'TB',\n    nodesep: 40,\n    edgesep: 10,\n    nodeHeight: 'auto',\n    groupPaddingTop: 55,\n    groupPaddingBottom: -5,\n    groupRendering: 'if-varied',\n  },\n};\n\nexport const layoutAssetGraph = (\n  graphData: GraphData,\n  opts: LayoutAssetGraphOptions,\n): AssetGraphLayout => {\n  try {\n    return layoutAssetGraphImpl(graphData, opts);\n  } catch (e) {\n    try {\n      return layoutAssetGraphImpl(graphData, {\n        ...opts,\n        overrides: {\n          ranker: 'longest-path',\n        },\n      });\n    } catch (e) {\n      return layoutAssetGraphImpl(graphData, {...opts, overrides: {ranker: 'network-simplex'}});\n    }\n  }\n};\n\nexport const layoutAssetGraphImpl = (\n  graphData: GraphData,\n  opts: LayoutAssetGraphOptions,\n): AssetGraphLayout => {\n  const g = new dagre.graphlib.Graph({compound: true});\n  const config = Object.assign({}, Config[opts.direction], opts.overrides || {});\n\n  g.setGraph(config);\n  g.setDefaultEdgeLabel(() => ({}));\n\n  // const shouldRender = (node?: GraphNode) => node && node.definition.opNames.length > 0;\n  const shouldRender = (node?: GraphNode) => node;\n  const renderedNodes = Object.values(graphData.nodes).filter(shouldRender);\n  const expandedGroups = graphData.expandedGroups || [];\n\n  // Identify all the groups\n  const groups: {[id: string]: GroupLayout} = {};\n  for (const node of renderedNodes) {\n    if (node.definition.groupName) {\n      const id = groupIdForNode(node);\n      groups[id] = groups[id] || {\n        id,\n        expanded: expandedGroups.includes(id),\n        groupName: node.definition.groupName,\n        repositoryName: node.definition.repository.name,\n        repositoryLocationName: node.definition.repository.location.name,\n        bounds: {x: 0, y: 0, width: 0, height: 0},\n      };\n    }\n  }\n\n  // Add all the group boxes to the graph\n  const groupsPresent =\n    config.groupRendering === 'if-varied' ? Object.keys(groups).length > 1 : true;\n\n  if (groupsPresent) {\n    Object.keys(groups).forEach((groupId) => {\n      if (expandedGroups.includes(groupId)) {\n        // sized based on it's children, but \"border\" tells Dagre we want cluster-level\n        // spacing between the node and others. Necessary because our groups have title bars.\n        g.setNode(groupId, {borderType: 'borderRight'});\n      } else {\n        g.setNode(groupId, {width: ASSET_NODE_WIDTH, height: 110});\n      }\n    });\n  }\n\n  // Add all the nodes inside expanded groups to the graph\n  renderedNodes.forEach((node) => {\n    if (!groupsPresent || expandedGroups.includes(groupIdForNode(node))) {\n      const label =\n        config.nodeHeight === 'auto'\n          ? getAssetNodeDimensions(node.definition)\n          : {width: ASSET_NODE_WIDTH, height: config.nodeHeight};\n\n      g.setNode(node.id, label);\n      if (groupsPresent && node.definition.groupName) {\n        g.setParent(node.id, groupIdForNode(node));\n      }\n    }\n  });\n\n  const linksToAssetsOutsideGraphedSet: {[id: string]: true} = {};\n  const groupIdForAssetId = Object.fromEntries(\n    Object.entries(graphData.nodes).map(([id, node]) => [id, groupIdForNode(node)]),\n  );\n\n  // Add the edges to the graph, and accumulate a set of \"foreign nodes\" (for which\n  // we have an inbound/outbound edge, but we don't have the `node` in the graphData).\n  Object.entries(graphData.downstream).forEach(([upstreamId, graphDataDownstream]) => {\n    const downstreamIds = Object.keys(graphDataDownstream);\n    downstreamIds.forEach((downstreamId) => {\n      if (\n        !shouldRender(graphData.nodes[downstreamId]) &&\n        !shouldRender(graphData.nodes[upstreamId])\n      ) {\n        return;\n      }\n      let v = upstreamId;\n      let w = downstreamId;\n\n      const wGroup = groupIdForAssetId[downstreamId];\n      if (groupsPresent && wGroup && !expandedGroups.includes(wGroup)) {\n        w = wGroup;\n      }\n      const vGroup = groupIdForAssetId[upstreamId];\n      if (groupsPresent && vGroup && !expandedGroups.includes(vGroup)) {\n        v = vGroup;\n      }\n      if (v === w) {\n        return;\n      }\n\n      g.setEdge({v, w}, {weight: 1});\n\n      if (!shouldRender(graphData.nodes[downstreamId])) {\n        linksToAssetsOutsideGraphedSet[downstreamId] = true;\n      } else if (!shouldRender(graphData.nodes[upstreamId])) {\n        linksToAssetsOutsideGraphedSet[upstreamId] = true;\n      }\n    });\n  });\n\n  // Add all the link nodes to the graph\n  Object.keys(linksToAssetsOutsideGraphedSet).forEach((id) => {\n    const path = JSON.parse(id);\n    const label = path[path.length - 1] || '';\n    g.setNode(id, getAssetLinkDimensions(label, opts));\n  });\n\n  dagre.layout(g);\n\n  let maxWidth = 1;\n  let maxHeight = 1;\n\n  const nodes: {[id: string]: AssetLayout} = {};\n\n  g.nodes().forEach((id) => {\n    const dagreNode = g.node(id);\n    if (!dagreNode?.x || !dagreNode?.width) {\n      return;\n    }\n    const bounds = {\n      x: dagreNode.x - dagreNode.width / 2,\n      y: dagreNode.y - dagreNode.height / 2,\n      width: dagreNode.width,\n      height: dagreNode.height,\n    };\n    if (!isGroupId(id)) {\n      nodes[id] = {id, bounds};\n    } else if (!expandedGroups.includes(id)) {\n      const group = groups[id]!;\n      group.bounds = bounds;\n    }\n\n    maxWidth = Math.max(maxWidth, dagreNode.x + dagreNode.width / 2);\n    maxHeight = Math.max(maxHeight, dagreNode.y + dagreNode.height / 2);\n  });\n\n  // Apply bounds to the groups based on the nodes inside them\n  if (groupsPresent) {\n    for (const node of renderedNodes) {\n      const nodeLayout = nodes[node.id];\n      if (nodeLayout && node.definition.groupName) {\n        const groupId = groupIdForNode(node);\n        const group = groups[groupId]!;\n        group.bounds =\n          group.bounds.width === 0\n            ? nodeLayout.bounds\n            : extendBounds(group.bounds, nodeLayout.bounds);\n      }\n    }\n    for (const group of Object.values(groups)) {\n      if (group.expanded) {\n        group.bounds = padBounds(group.bounds, {\n          x: 15,\n          top: config.groupPaddingTop,\n          bottom: config.groupPaddingBottom,\n        });\n      }\n    }\n  }\n\n  const edges: AssetLayoutEdge[] = [];\n\n  g.edges().forEach((e) => {\n    const v = g.node(e.v);\n    const w = g.node(e.w);\n    if (!v || !w) {\n      return;\n    }\n    const vXInset = !!linksToAssetsOutsideGraphedSet[e.v] ? 16 : 24;\n    const wXInset = !!linksToAssetsOutsideGraphedSet[e.w] ? 16 : 24;\n\n    // Ignore the coordinates from dagre and use the top left + bottom left of the\n    edges.push(\n      opts.direction === 'horizontal'\n        ? {\n            from: {x: v.x + v.width / 2, y: v.y},\n            fromId: e.v,\n            to: {x: w.x - w.width / 2 - 5, y: w.y},\n            toId: e.w,\n          }\n        : {\n            from: {x: v.x - v.width / 2 + vXInset, y: v.y - 30 + v.height / 2},\n            fromId: e.v,\n            to: {x: w.x - w.width / 2 + wXInset, y: w.y + 20 - w.height / 2},\n            toId: e.w,\n          },\n    );\n  });\n\n  return {\n    nodes,\n    edges,\n    width: maxWidth + MARGIN,\n    height: maxHeight + MARGIN,\n    groups: groupsPresent ? groups : {},\n  };\n};\n\nexport const ASSET_LINK_NAME_MAX_LENGTH = 30;\n\nexport const getAssetLinkDimensions = (label: string, opts: LayoutAssetGraphOptions) => {\n  return opts.direction === 'horizontal'\n    ? {width: 32 + 7.1 * Math.min(ASSET_LINK_NAME_MAX_LENGTH, label.length), height: 50}\n    : {width: 106, height: 50};\n};\n\nexport const padBounds = (a: IBounds, padding: {x: number; top: number; bottom: number}) => {\n  return {\n    x: a.x - padding.x,\n    y: a.y - padding.top,\n    width: a.width + padding.x * 2,\n    height: a.height + padding.top + padding.bottom,\n  };\n};\n\nexport const extendBounds = (a: IBounds, b: IBounds) => {\n  const xmin = Math.min(a.x, b.x);\n  const ymin = Math.min(a.y, b.y);\n  const xmax = Math.max(a.x + a.width, b.x + b.width);\n  const ymax = Math.max(a.y + a.height, b.y + b.height);\n  return {x: xmin, y: ymin, width: xmax - xmin, height: ymax - ymin};\n};\n\nexport const ASSET_NODE_WIDTH = 320;\nexport const ASSET_NODE_NAME_MAX_LENGTH = 38;\n\nexport const getAssetNodeDimensions = (def: {\n  assetKey: {path: string[]};\n  opNames: string[];\n  isSource: boolean;\n  isObservable: boolean;\n  isPartitioned: boolean;\n  graphName: string | null;\n  description?: string | null;\n  computeKind: string | null;\n  changedReasons?: ChangeReason[];\n}) => {\n  const width = ASSET_NODE_WIDTH;\n\n  let height = 100; // top tags area + name + description\n\n  if (def.isSource && def.isObservable) {\n    height += 30; // status row\n  } else {\n    height += 26; // status row\n    if (def.isPartitioned) {\n      height += 40;\n    }\n  }\n  if (def.changedReasons?.length) {\n    height += 30;\n  }\n\n  height += 30; // tags beneath\n\n  return {width, height};\n};\n","export const DEFAULT_RESULT_NAME = 'result';\n\nexport const titleOfIO = (i: {solid: {name: string}; definition: {name: string}}) => {\n  return i.solid.name !== DEFAULT_RESULT_NAME\n    ? `${i.solid.name}:${i.definition.name}`\n    : i.solid.name;\n};\n","import * as dagre from 'dagre';\n\nimport {IBounds, IPoint} from './common';\nimport {titleOfIO} from '../app/titleOfIO';\n\nexport type OpLayoutEdgeSide = {\n  point: IPoint;\n  opName: string;\n  edgeName: string;\n};\n\nexport type OpLayoutEdge = {\n  from: OpLayoutEdgeSide;\n  to: OpLayoutEdgeSide;\n};\n\nexport interface OpLayout {\n  // Overall frame of the box relative to 0,0 on the graph\n  bounds: IBounds;\n\n  // Frames of specific components - These need to be computed during layout\n  // (rather than at render time) to position edges into inputs/outputs.\n  op: IBounds;\n  inputs: {[inputName: string]: OpLayoutIO};\n  outputs: {[outputName: string]: OpLayoutIO};\n}\n\nexport interface OpLayoutIO {\n  layout: IBounds;\n  label: boolean;\n  collapsed: string[];\n  port: IPoint;\n}\n\nexport type OpGraphLayout = {\n  width: number;\n  height: number;\n  parent: ParentOpLayout | null;\n  edges: OpLayoutEdge[];\n  nodes: {[opName: string]: OpLayout};\n};\n\ninterface ParentOpLayout extends Omit<OpLayout, 'op'> {\n  mappingLeftEdge: number;\n  mappingLeftSpacing: number;\n  dependsOn: {[opName: string]: IPoint};\n  dependedBy: {[opName: string]: IPoint};\n  invocationBoundingBox: IBounds;\n}\n\nexport interface ILayoutOp {\n  name: string;\n  inputs: {\n    definition: {\n      name: string;\n    };\n    dependsOn: {\n      definition: {\n        name: string;\n      };\n      solid: {\n        name: string;\n      };\n    }[];\n  }[];\n  definition: {\n    description: string | null;\n    assetNodes: {\n      assetKey: {\n        path: string[];\n      };\n    }[];\n  };\n  outputs: {\n    definition: {\n      name: string;\n    };\n    dependedBy: {\n      definition: {\n        name: string;\n      };\n      solid: {\n        name: string;\n      };\n    }[];\n  }[];\n}\n\nconst OP_WIDTH = 370;\nconst OP_BASE_HEIGHT = 52;\nconst OP_ASSETS_ROW_HEIGHT = 22;\nconst IO_HEIGHT = 26;\nconst IO_INSET = 0;\nconst IO_MINI_WIDTH = 35;\nconst IO_THRESHOLD_FOR_MINI = 4;\nconst PORT_INSET_X = 13;\nconst PORT_INSET_Y = IO_HEIGHT / 2;\nconst PARENT_DEFINITION_PADDING = 70;\nconst PARENT_INVOCATION_PADDING = 70;\nconst EXTERNAL_DEPENDENCY_PADDING = 50;\n\nconst MARGIN_BASE = 100;\n\ntype OpLinkInfo = {\n  solid: {name: string};\n  definition: {name: string};\n};\n\nfunction flattenIO(arrays: OpLinkInfo[][]) {\n  const map: {[key: string]: OpLinkInfo} = {};\n  arrays.forEach((array) => array.forEach((item) => (map[titleOfIO(item)] = item)));\n  return Object.values(map);\n}\n\nexport type LayoutOpGraphOptions = {\n  parentOp?: ILayoutOp;\n};\n\nexport function layoutOpGraph(pipelineOps: ILayoutOp[], opts: LayoutOpGraphOptions): OpGraphLayout {\n  const g = new dagre.graphlib.Graph();\n\n  // First, identify how much space we need to pad the DAG by in order to show the\n  // parent op AROUND it. We pass this padding in to dagre, and then we have enough\n  // room to add our parent layout around the result.\n  let parentIOPadding = 0;\n  let marginy = MARGIN_BASE;\n  let marginx = MARGIN_BASE;\n  if (opts.parentOp) {\n    parentIOPadding =\n      Math.max(opts.parentOp.inputs.length, opts.parentOp.outputs.length) * IO_HEIGHT;\n    marginx = PARENT_DEFINITION_PADDING + PARENT_INVOCATION_PADDING;\n    marginy = marginx + parentIOPadding;\n  }\n\n  // Define a new top-down, left to right graph layout\n  g.setGraph({rankdir: 'TB', marginx, marginy, ranker: 'tight-tree'});\n  g.setDefaultEdgeLabel(() => ({}));\n\n  const edges: OpLayoutEdge[] = [];\n  const opNamesPresent: {[name: string]: boolean} = {};\n\n  pipelineOps.forEach((op) => {\n    opNamesPresent[op.name] = true;\n  });\n  pipelineOps.forEach((op) => {\n    // Lay out each op individually to get it's width and height based on it's\n    // inputs and outputs, and then attach it to the graph. Dagre will give us it's\n    // x,y position.\n    const layout = layoutOp(op, {x: 0, y: 0});\n    g.setNode(op.name, {\n      width: layout.bounds.width,\n      height: layout.bounds.height,\n    });\n\n    // Give Dagre the dependency edges and build a flat set of them so we\n    // can reference them in a single pass later\n    op.inputs.forEach((input) => {\n      input.dependsOn.forEach((dep) => {\n        if (opNamesPresent[dep.solid.name] && opNamesPresent[op.name]) {\n          g.setEdge({v: dep.solid.name, w: op.name}, {weight: 1});\n\n          edges.push({\n            from: {\n              point: {x: 0, y: 0},\n              opName: dep.solid.name,\n              edgeName: dep.definition.name,\n            },\n            to: {\n              point: {x: 0, y: 0},\n              opName: op.name,\n              edgeName: input.definition.name,\n            },\n          });\n        }\n      });\n    });\n  });\n\n  dagre.layout(g);\n\n  const ops: {[opName: string]: OpLayout} = {};\n  const dagreNodes: {[opName: string]: dagre.Node} = {};\n  g.nodes().forEach(function (opName) {\n    const node = g.node(opName);\n    if (!node) {\n      return;\n    }\n    dagreNodes[opName] = node;\n  });\n\n  // Due to a bug in Dagre when run without an \"align\" value, we need to calculate\n  // the total width of the graph coordinate space ourselves. We need the height\n  // because we've shifted long single rows into multiple rows.\n  let maxWidth = 0;\n  let maxHeight = 0;\n\n  // Read the Dagre layout and map \"nodes\" back to our solids, but with\n  // X,Y coordinates this time.\n  Object.entries(dagreNodes).forEach(([opName, node]) => {\n    const op = pipelineOps.find(({name}) => name === opName);\n    if (!op) {\n      return;\n    }\n\n    const x = node.x - node.width / 2; // Dagre's x/y is the center, we want top left\n    const y = node.y - node.height / 2;\n    ops[opName] = layoutOp(op, {x, y});\n    maxWidth = Math.max(maxWidth, x + node.width);\n    maxHeight = Math.max(maxHeight, y + node.height);\n  });\n\n  // Read the Dagre layout and map \"edges\" back to our data model. We don't\n  // currently use the \"closest points on the node\" Dagre suggests (but we could).\n  g.edges().forEach(function (e) {\n    const conn = edges.find((c) => c.from.opName === e.v && c.to.opName === e.w);\n    const points = g.edge(e).points;\n    if (conn && points.length > 0) {\n      conn.from.point = points[0]!;\n      conn.to.point = points[points.length - 1]!;\n    }\n  });\n\n  const result: OpGraphLayout = {\n    edges,\n    nodes: ops,\n    width: maxWidth + marginx,\n    height: maxHeight + marginy,\n    parent: null,\n  };\n\n  if (opts.parentOp) {\n    // Now that we've computed the pipeline layout fully, lay out the\n    // composite op around the completed DAG.\n    result.parent = layoutParentGraphOp(result, opts.parentOp, parentIOPadding);\n  }\n\n  return result;\n}\n\nfunction layoutParentGraphOp(layout: OpGraphLayout, op: ILayoutOp, parentIOPadding: number) {\n  const result: ParentOpLayout = {\n    invocationBoundingBox: {\n      x: 1,\n      y: 1,\n      width: layout.width - 1,\n      height: layout.height - 1,\n    },\n    bounds: {\n      x: PARENT_INVOCATION_PADDING,\n      y: PARENT_INVOCATION_PADDING + parentIOPadding,\n      width: layout.width - PARENT_INVOCATION_PADDING * 2,\n      height: layout.height - (PARENT_INVOCATION_PADDING + parentIOPadding) * 2,\n    },\n    mappingLeftEdge: PARENT_INVOCATION_PADDING - 20,\n    mappingLeftSpacing: 10,\n    inputs: {},\n    outputs: {},\n    dependsOn: layoutExternalConnections(\n      flattenIO(op.inputs.map((d) => d.dependsOn)),\n      -EXTERNAL_DEPENDENCY_PADDING,\n      layout.width,\n    ),\n    dependedBy: layoutExternalConnections(\n      flattenIO(op.outputs.map((d) => d.dependedBy)),\n      layout.height + EXTERNAL_DEPENDENCY_PADDING,\n      layout.width,\n    ),\n  };\n\n  const boundingBottom = result.bounds.y + result.bounds.height;\n\n  op.inputs.forEach((input, idx) => {\n    result.inputs[input.definition.name] = {\n      layout: {\n        x: result.bounds.x,\n        y: result.bounds.y - idx * IO_HEIGHT - IO_HEIGHT,\n        width: 0,\n        height: IO_HEIGHT,\n      },\n      collapsed: [],\n      label: true,\n      port: {\n        x: result.bounds.x + PORT_INSET_X,\n        y: result.bounds.y - idx * IO_HEIGHT - IO_HEIGHT / 2,\n      },\n    };\n  });\n\n  op.outputs.forEach((output, idx) => {\n    result.outputs[output.definition.name] = {\n      layout: {\n        x: result.bounds.x,\n        y: boundingBottom + idx * IO_HEIGHT,\n        width: 0,\n        height: IO_HEIGHT,\n      },\n      collapsed: [],\n      label: true,\n      port: {\n        x: result.bounds.x + PORT_INSET_X,\n        y: boundingBottom + idx * IO_HEIGHT + IO_HEIGHT / 2,\n      },\n    };\n  });\n\n  return result;\n}\n\nfunction layoutExternalConnections(links: OpLinkInfo[], y: number, layoutWidth: number) {\n  // fill evenly from 0 to layoutWidth from left to right, then center them if there's overflow.\n  const inset = PARENT_INVOCATION_PADDING + PORT_INSET_X;\n  const insetWidth = layoutWidth - inset * 2;\n  const spacing = Math.max(200, insetWidth / links.length);\n  const baseX = inset + Math.min(0, (insetWidth - links.length * spacing) / 2);\n  const yShift = spacing < 300 ? 20 : 0;\n\n  const result: {[opName: string]: IPoint} = {};\n  links.forEach((link, idx) => {\n    const shiftDirection = 1 - (idx % 2) * 2; // 1 or -1, alternating\n    result[titleOfIO(link)] = {\n      x: baseX + idx * spacing,\n      y: y + yShift * shiftDirection,\n    };\n  });\n  return result;\n}\n\nexport function layoutOp(op: ILayoutOp, root: IPoint): OpLayout {\n  // Starting at the root (top left) X,Y, return the layout information for an op with\n  // input blocks, then the main block, then output blocks (arranged vertically).\n  //\n  // This code \"appends\" boxes vertically, advancing accY as it goes.\n  let accY = root.y;\n\n  const appendMiniIODots = <T extends ILayoutOp['inputs'][0] | ILayoutOp['outputs'][0]>(\n    ios: T[],\n    sortKey: (io: T) => string,\n    clusteringKey: (io: T) => string,\n  ) => {\n    // Sort both input and output boxes displayed on the graph alphabetically based on the input name.\n    // This means that if two ops are connected to each other multiple times, the lines do not cross.\n    const sorted = [...ios].sort((a, b) => sortKey(a).localeCompare(sortKey(b)));\n\n    let x = 0;\n    let last: OpLayoutIO;\n    let lastKey: string | null = null;\n    const layouts: {[name: string]: OpLayoutIO} = {};\n    const spacing = Math.min(IO_MINI_WIDTH, OP_WIDTH / (sorted.length + 1));\n\n    // Add \"port\" layouts, collapsing the dots if they are connected to the same opposing solid\n    // (eg: two inputs connected to the same upstream output) with a \"[O] + 2\" style.\n    sorted.forEach((io, _idx) => {\n      const key = clusteringKey(io);\n      if (key !== lastKey) {\n        lastKey = key;\n        last = {\n          port: {\n            x: root.x + x + PORT_INSET_X,\n            y: accY + PORT_INSET_Y,\n          },\n          collapsed: [],\n          label: false,\n          layout: {\n            x: root.x + x,\n            y: accY,\n            width: IO_MINI_WIDTH,\n            height: IO_HEIGHT,\n          },\n        };\n        layouts[io.definition.name] = last;\n        x += spacing;\n      } else {\n        if (last.collapsed.length === 0) {\n          x += 15;\n        }\n        last.collapsed.push(io.definition.name);\n      }\n    });\n\n    // Center the items on the op rather than left justifying them\n    const centeringAdjustment = (OP_WIDTH - (x - PORT_INSET_X + IO_MINI_WIDTH)) / 2;\n    Object.values(layouts).forEach((l) => {\n      l.layout.x += centeringAdjustment;\n      l.port.x += centeringAdjustment;\n    });\n\n    // Place the next box beneath the\n    accY += IO_HEIGHT;\n\n    return layouts;\n  };\n\n  const appendStackedIOBoxes = (ios: ILayoutOp['inputs'] | ILayoutOp['outputs']) => {\n    const layouts: {[name: string]: OpLayoutIO} = {};\n    ios.forEach((io) => {\n      layouts[io.definition.name] = {\n        port: {x: root.x + PORT_INSET_X, y: accY + PORT_INSET_Y},\n        label: true,\n        collapsed: [],\n        layout: {\n          x: root.x,\n          y: accY,\n          width: 0,\n          height: IO_HEIGHT,\n        },\n      };\n      accY += IO_HEIGHT;\n    });\n    return layouts;\n  };\n\n  const inputLayouts =\n    op.inputs.length > IO_THRESHOLD_FOR_MINI\n      ? appendMiniIODots(\n          op.inputs,\n          (input) => input.definition.name,\n          (input) => input.dependsOn[0]?.solid.name || '',\n        )\n      : appendStackedIOBoxes(op.inputs);\n\n  const opLayout: IBounds = {\n    x: root.x,\n    y: Math.max(root.y, accY - IO_INSET),\n    width: OP_WIDTH,\n    height: OP_BASE_HEIGHT + IO_INSET * 2,\n  };\n\n  accY += OP_BASE_HEIGHT;\n\n  if (op.definition.assetNodes.length && op.definition.description) {\n    opLayout.height += OP_ASSETS_ROW_HEIGHT;\n    accY += OP_ASSETS_ROW_HEIGHT;\n  }\n\n  const outputLayouts =\n    op.outputs.length > IO_THRESHOLD_FOR_MINI\n      ? appendMiniIODots(\n          op.outputs,\n          (o) => o.dependedBy[0]?.definition.name || '',\n          (o) => o.dependedBy[0]?.solid.name || '',\n        )\n      : appendStackedIOBoxes(op.outputs);\n\n  return {\n    bounds: {\n      x: root.x - 5,\n      y: root.y - 5,\n      width: OP_WIDTH + 10,\n      height: accY - root.y + 10,\n    },\n    op: opLayout,\n    inputs: inputLayouts,\n    outputs: outputLayouts,\n  };\n}\n","/* eslint-disable no-restricted-globals */\n\nimport {layoutAssetGraph} from '../asset-graph/layout';\nimport {layoutOpGraph} from '../graph/layout';\n\n/**\n * NOTE: Please avoid adding React as a transitive dependency to this file, as it can break\n * the development workflow. https://github.com/pmmmwh/react-refresh-webpack-plugin/issues/24\n *\n * If you see an error like `$RefreshReg$ is not defined` during development, check the\n * dependencies of this file. If you find that React has been included as a dependency, please\n * try to remove it.\n */\n\nself.addEventListener('message', (event) => {\n  const {data} = event;\n\n  switch (data.type) {\n    case 'layoutOpGraph': {\n      const {ops, opts} = data;\n      self.postMessage(layoutOpGraph(ops, opts));\n      break;\n    }\n    case 'layoutAssetGraph': {\n      const {graphData, opts} = data;\n      self.postMessage(layoutAssetGraph(graphData, opts));\n    }\n  }\n});\n"],"names":["MapCache","__webpack_require__","memoize","func","resolver","memoized","args","arguments","key","apply","cache","has","get","result","set","Cache","module","exports","_object_spread_object_spread","target","i","length","source","ownKeys","Object","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","value","defineProperty","configurable","writable","obj","_object_spread_props_object_spread_props","getOwnPropertyDescriptors","defineProperties","object","enumerableOnly","symbols","push","_array_like_to_array","arr","len","arr2","_unsupported_iterable_to_array","o","minLen","n","prototype","toString","call","slice","constructor","name","Array","from","test","_sliced_to_array_sliced_to_array","_array_with_holes","isArray","_iterable_to_array_limit","_s","_e","_i","Symbol","iterator","_arr","_n","_d","next","done","err","_non_iterable_rest","_ref","x","y","_to_consumable_array_to_consumable_array","_array_without_holes","_iterable_to_array","iter","_non_iterable_spread","prop_types_default","oneOfType","string","any","FeatureFlag","flagUseNewOverviewPage","getFeatureFlags","getJSONForKey","stored","undefined","window","localStorage","getItem","JSON","parse","flag","includes","locale","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","Collator","navigator","language","sensitivity","pathHorizontalDiagonal","s","groupIdForNode","node","definition","repository","location","groupName","join","getUpstreamNodes","assetKey","graphData","currentUpstream","upstream","stringify","path","map","graphId","__typename","flat","index","findIndex","key2","data","Config","horizontal","ranker","direction","marginx","marginy","ranksep","rankdir","edgesep","nodesep","nodeHeight","groupPaddingTop","groupPaddingBottom","groupRendering","clusterpaddingtop","vertical","layoutAssetGraph","opts","layoutAssetGraphImpl","e","overrides","g","dagre","Graph","compound","config","assign","setGraph","setDefaultEdgeLabel","shouldRender","renderedNodes","values","nodes","expandedGroups","groups","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","id","expanded","repositoryName","repositoryLocationName","bounds","width","height","return","groupsPresent","groupId","setNode","borderType","ASSET_NODE_WIDTH","label","getAssetNodeDimensions","setParent","linksToAssetsOutsideGraphedSet","groupIdForAssetId","fromEntries","entries","param","downstream","upstreamId","downstreamIds","graphDataDownstream","downstreamId","v","w","wGroup","vGroup","setEdge","weight","getAssetLinkDimensions","maxWidth","maxHeight","dagreNode","group","Math","max","_iteratorNormalCompletion1","_didIteratorError1","_iteratorError1","_step1","_iterator1","nodeLayout","extendBounds","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","padBounds","top","bottom","edges","vXInset","wXInset","fromId","to","toId","min","a","padding","b","xmin","ymin","xmax","ymax","def","isSource","isObservable","isPartitioned","changedReasons","titleOfIO","solid","flattenIO","arrays","array","item","layoutExternalConnections","links","layoutWidth","insetWidth","inset","spacing","baseX","yShift","link","idx","layoutOp","op","root","accY","appendMiniIODots","ios","sortKey","clusteringKey","last","sorted","sort","localeCompare","lastKey","layouts","OP_WIDTH","io","_idx","port","IO_HEIGHT","collapsed","layout","centeringAdjustment","IO_MINI_WIDTH","l","appendStackedIOBoxes","inputLayouts","inputs","input","dependsOn","opLayout","OP_BASE_HEIGHT","assetNodes","description","outputLayouts","outputs","dependedBy","self","addEventListener","event","type","parentIOPadding","boundingBottom","opNamesPresent","ops","dagreNodes","postMessage","parentOp","PARENT_DEFINITION_PADDING","PARENT_INVOCATION_PADDING","pipelineOps","dep","point","opName","edgeName","find","conn","c","points","edge","parent","invocationBoundingBox","mappingLeftEdge","mappingLeftSpacing","d","output"],"sourceRoot":""}